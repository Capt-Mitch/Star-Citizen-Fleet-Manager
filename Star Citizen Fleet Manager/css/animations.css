/* === ANIMATION EFFECTS === */

/* === MODAL ANIMATIONS === */
.modal {
  display: none;
  position: fixed;
  z-index: 2000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
  animation: modalFadeIn 0.3s ease-out;
}

.modal.show {
  display: flex;
  align-items: center;
  justify-content: center;
}

@keyframes modalFadeIn {
  from {
    opacity: 0;
    backdrop-filter: blur(0);
  }
  to {
    opacity: 1;
    backdrop-filter: blur(5px);
  }
}

.modal-content {
  background: linear-gradient(135deg, var(--sc-panel-bg) 0%, rgba(10, 15, 22, 0.98) 100%);
  border: 2px solid var(--sc-panel-border);
  border-radius: 15px;
  padding: 30px;
  max-width: 600px;
  width: 90%;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
  box-shadow: var(--sc-glow), inset 0 0 30px rgba(0, 212, 255, 0.1);
  animation: modalSlideIn 0.4s ease-out;
}

@keyframes modalSlideIn {
  from {
    transform: translateY(-50px) scale(0.9);
    opacity: 0;
  }
  to {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
}

.modal-title {
  color: var(--sc-cyan);
  font-size: 1.4em;
  font-weight: 700;
  margin-bottom: 20px;
  text-align: center;
  text-shadow: var(--sc-glow);
  letter-spacing: 2px;
}

.modal-form {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.close {
  position: absolute;
  top: 15px;
  right: 20px;
  color: var(--sc-gray-light);
  font-size: 2em;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  line-height: 1;
}

.close:hover {
  color: var(--sc-red);
  text-shadow: var(--sc-glow-red);
  transform: scale(1.2);
}

/* === LOADING ANIMATIONS === */
@keyframes dataSync {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.syncing {
  background: linear-gradient(45deg, var(--sc-blue), var(--sc-cyan), var(--sc-blue));
  background-size: 200% 200%;
  animation: dataSync 2s ease infinite;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* === PROGRESS INDICATORS === */
.progress-bar {
  width: 100%;
  height: 4px;
  background: rgba(0, 0, 0, 0.6);
  border-radius: 2px;
  overflow: hidden;
  position: relative;
  margin: 10px 0;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--sc-blue), var(--sc-cyan));
  border-radius: 2px;
  transition: width 0.3s ease;
  position: relative;
}

.progress-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  animation: progressShimmer 2s infinite;
}

@keyframes progressShimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* === STATUS LIGHT ANIMATIONS === */
.status-indicator {
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  margin: 0 8px;
  position: relative;
  box-shadow: inset 0 0 5px rgba(0,0,0,0.5);
}

.status-indicator::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: statusPulse 2s infinite;
}

.status-indicator.active::before {
  background: var(--sc-green);
  box-shadow: 0 0 10px var(--sc-green);
}

.status-indicator.warning::before {
  background: var(--sc-yellow);
  box-shadow: 0 0 10px var(--sc-yellow);
}

.status-indicator.error::before {
  background: var(--sc-red);
  box-shadow: 0 0 10px var(--sc-red);
}

.status-indicator.inactive::before {
  background: var(--sc-gray);
  animation: none;
}

@keyframes statusPulse {
  0%, 100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
  50% { opacity: 0.6; transform: translate(-50%, -50%) scale(1.2); }
}

/* === HOVER EFFECTS === */
.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 212, 255, 0.3);
}

.hover-glow {
  transition: all 0.3s ease;
  position: relative;
}

.hover-glow::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: inherit;
  border-radius: inherit;
  opacity: 0;
  filter: blur(10px);
  transition: opacity 0.3s ease;
  z-index: -1;
}

.hover-glow:hover::before {
  opacity: 0.7;
}

/* === NOTIFICATION ANIMATIONS === */
.notification {
  position: fixed;
  top: 20px;
  right: 20px;
  background: var(--sc-panel-bg);
  border: 2px solid var(--sc-panel-border);
  border-radius: 10px;
  padding: 15px 20px;
  max-width: 400px;
  box-shadow: var(--sc-glow);
  z-index: 3000;
  transform: translateX(100%);
  opacity: 0;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.notification.show {
  transform: translateX(0);
  opacity: 1;
}

.notification.success {
  border-color: var(--sc-green);
  box-shadow: 0 0 15px var(--sc-green);
}

.notification.error {
  border-color: var(--sc-red);
  box-shadow: 0 0 15px var(--sc-red);
}

.notification.warning {
  border-color: var(--sc-yellow);
  box-shadow: 0 0 15px var(--sc-yellow);
}

/* === TYPING EFFECT === */
.typing-effect {
  overflow: hidden;
  border-right: 2px solid var(--sc-blue);
  white-space: nowrap;
  animation: typing 3s steps(40) 1s infinite alternate, blink 1s infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink {
  50% { border-color: transparent; }
}

/* === SCAN EFFECTS === */
.scan-line {
  position: relative;
  overflow: hidden;
}

.scan-line::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(0, 212, 255, 0.4), 
    transparent
  );
  animation: scanEffect 3s infinite;
}

@keyframes scanEffect {
  0% { left: -100%; }
  100% { left: 100%; }
}

/* === SHAKE ANIMATION === */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.shake {
  animation: shake 0.5s ease-in-out;
}

/* === BOUNCE ANIMATION === */
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
  40% { transform: translateY(-10px); }
  60% { transform: translateY(-5px); }
}

.bounce {
  animation: bounce 1s ease-in-out;
}

/* === GLOW PULSE === */
.glow-pulse {
  animation: glowPulse 2s ease-in-out infinite alternate;
}

@keyframes glowPulse {
  from {
    text-shadow: 0 0 5px var(--sc-blue);
    box-shadow: 0 0 10px var(--sc-blue);
  }
  to {
    text-shadow: 0 0 15px var(--sc-cyan);
    box-shadow: 0 0 30px var(--sc-cyan);
  }
}

/* === MATRIX RAIN EFFECT (Optional Background) === */
.matrix-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
  opacity: 0.1;
}

.matrix-char {
  position: absolute;
  color: var(--sc-green);
  font-family: 'Consolas', monospace;
  font-size: 14px;
  animation: matrixFall 3s linear infinite;
}

@keyframes matrixFall {
  0% {
    opacity: 1;
    transform: translateY(-100vh);
  }
  100% {
    opacity: 0;
    transform: translateY(100vh);
  }
}

/* === FLICKER EFFECT === */
.flicker {
  animation: flicker 2s infinite alternate;
}

@keyframes flicker {
  0%, 100% { opacity: 1; }
  25% { opacity: 0.8; }
  50% { opacity: 0.9; }
  75% { opacity: 0.85; }
}

/* === SLIDE TRANSITIONS === */
.slide-in-left {
  animation: slideInLeft 0.5s ease-out forwards;
}

.slide-in-right {
  animation: slideInRight 0.5s ease-out forwards;
}

.slide-out-left {
  animation: slideOutLeft 0.3s ease-in forwards;
}

.slide-out-right {
  animation: slideOutRight 0.3s ease-in forwards;
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideOutLeft {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0;
  }
}

@keyframes slideOutRight {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

/* === SCALE TRANSITIONS === */
.scale-in {
  animation: scaleIn 0.3s ease-out forwards;
}

.scale-out {
  animation: scaleOut 0.2s ease-in forwards;
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.8);
    opacity: 0;
  }
}

/* === PERFORMANCE OPTIMIZATIONS === */
.gpu-accelerated {
  transform: translateZ(0);
  will-change: transform, opacity;
}

/* === REDUCED MOTION === */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}